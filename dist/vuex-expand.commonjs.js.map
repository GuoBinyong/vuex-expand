{"version":3,"sources":["webpack://vuexExpand/webpack/bootstrap","webpack://vuexExpand/external \"vuex\"","webpack://vuexExpand/./src/index.js","webpack://vuexExpand/external \"es-expand\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","mergeStoreConfigs","storeConfigs","Array","Error","reduce","merged","config","keys","forEach","configPropValue","mergedPropValue","newPropValue","configModulesKey","mergedModule","moduleStoreOptions","e","configStoreOptionsWhitInitState","storeOptions","initState","edulcoration","subStoreOptions","configState","state","configStateKeys","assignKeys","Vuex","Store","this","_keyName","set","newValue","saveState","keyName","localStorage","setAnyItem","getLocalState","getParsedItem","mergeStoreConfigsWhitInitState","map","storeConf"],"mappings":"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","file":"vuex-expand.commonjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = require(\"vuex\");","import Vuex from 'vuex'\nimport \"es-expand\"\n\n/**\n * 定义计算属性 keyName ，表示 state 在 localStorage 中的键名 ，当访问 keyName 时，如果 keyName 不存在，则会取默认值 'StoreState'\n */\nObject.defineProperty(Vuex.Store.prototype, 'keyName', {\n  get: function () {\n    if (!this._keyName) {\n      this._keyName = 'StoreState';\n    }\n\n    return this._keyName;\n  },\n  set: function (newValue) {\n    if (newValue) {\n      this._keyName = newValue;\n    }\n  }\n})\n\n\n/**\n * 将 state 存储在 localStorage 中；\n * @param keyName ? : string  存储在 localStorage 中的键名，如果未设置该参数，则自动次用 store.keyName 的值作为键名\n */\nVuex.Store.prototype.saveState = function (keyName) {\n  this.keyName = keyName;\n  localStorage.setAnyItem(this.keyName, this.state);\n}\n\n\n/**\n * 获取存储在 localStorage 中的 state 对象\n * @returns state\n */\nVuex.Store.prototype.getLocalState = function () {\n  return localStorage.getParsedItem(this.keyName);\n}\n\n\n/**\n * 把 store 配置数组中所有的配置对象合并成一个store配置对象\n * @param storeConfigs : Array<StoreOptions>  store 的配置数组\n * @returns StoreOptions    store选项对象\n *\n */\nfunction mergeStoreConfigs(storeConfigs) {\n  if (!(storeConfigs instanceof Array)) {\n    throw new Error(`storeConfigs必须是数组类型，但您传的是：${storeConfigs}`);\n  }\n\n  let storeOptions = storeConfigs.reduce(function (merged, config) {\n\n    Object.keys(config).forEach(function (key) {\n      let configPropValue = config[key];\n      let mergedPropValue = merged[key];\n      let newPropValue = null;\n\n      // 注意：有些case有 break，有些没有；这样写可能不太好理解，但比用 if else 节省了好几行代码，从而提高了性能\n      switch (key) {\n        case \"plugins\": {\n          newPropValue = [...mergedPropValue, ...configPropValue];\n          break;\n        }\n        case \"initState\":\n        case \"strict\": {\n          newPropValue = mergedPropValue || configPropValue;\n          break;\n        }\n        case \"modules\": {\n\n          if (mergedPropValue) {\n\n            Object.keys(configPropValue).forEach(function (configModulesKey) {\n\n              let mergedModule = mergedPropValue[configModulesKey];\n\n              if (mergedModule) {\n                let configModule = configPropValue[configModulesKey];\n\n                //递归调用自己来合并modules中的同名 StoreOptions\n                let moduleStoreOptions = mergeStoreConfigs([mergedModule, configModule]);\n                configPropValue[configModulesKey] = moduleStoreOptions;\n\n                try {\n                  delete mergedPropValue[configModulesKey];\n                } catch (e) {\n\n                }\n\n              }\n\n            });\n\n          }\n\n          newPropValue = { ...mergedPropValue, ...configPropValue };\n          break;\n        }\n        case \"state\": {\n          if (typeof configPropValue == \"function\") {\n            configPropValue = configPropValue();\n          }\n\n          newPropValue = { ...mergedPropValue, ...configPropValue };\n          break;\n        }\n        default: {\n          newPropValue = { ...mergedPropValue, ...configPropValue };\n        }\n\n      }\n\n      merged[key] = newPropValue;\n\n    });\n\n\n    return merged;\n\n  }, {});\n\n\n  return storeOptions;\n\n}\n\n\n/**\n * 用初始 state 配置 store的选项对象\n * @param storeOptions : StoreOptions   store的选项对象\n * @param initState : State    初始state\n * @param edulcoration : boolean   可选；是否除杂，即：是否需要忽略 storeOptions 的 state 中没有的属性 ；\n * @returns StoreConfig    返回带有初始 state 的配置对象\n *\n *\n * 说明：\n * 由于模块 modules 中的 state 会覆盖全局的 state ，所以，通过把初始 state 传给全局的 state 的方式不能达到给模块设置初始值的目的；\n * 此方法就是为解决这个问题而来的；\n *\n * 注意：\n * 如果某些模块 module 不想用入参 initState 中的 state 作为初始值，只用 module 本身设置的 state 作为初始值，则可以在该模块的 storeOptions 对象中增加一个布尔类型的选项 initState ，其值为 true ，即可；\n * initState 选项表示：是否用该 storeOptions 中配置的 state 作为初始的 state\n *\n * 示例：\n * {\n *   modules:{},\n *   state:{},\n *   mutations:{},\n *   actions:{},\n *   getters:{},\n *   plugins:[],\n *   strict:false,\n *   initState:true\n * }\n *\n */\n\n\nfunction configStoreOptionsWhitInitState(storeOptions, initState, edulcoration) {\n\n  if (initState) {\n\n    let modules = storeOptions.modules;\n\n    if (modules) {\n\n      Object.keys(modules).forEach(function (key) {\n\n        let subStoreOptions = modules[key];\n        let subInitState = initState[key];\n\n        subStoreOptions = configStoreOptionsWhitInitState(subStoreOptions, subInitState,edulcoration);\n\n\n        modules[key] = subStoreOptions;\n\n        try {\n          delete initState[key];\n        } catch (e) {\n\n        }\n\n      });\n\n      storeOptions.modules = modules;\n\n    }\n\n\n\n    let configState = storeOptions.state;\n\n    if (edulcoration){\n\n      if (configState && !storeOptions.initState)  {\n        let configStateKeys = Object.keys(configState) ;\n        storeOptions.state = Object.assignKeys(configState,configStateKeys,initState) ;\n      }\n\n    }else {\n\n      if (storeOptions.initState) {\n        storeOptions.state = {...initState, ...configState};\n      } else {\n        storeOptions.state = {...configState, ...initState};\n      }\n\n    }\n\n\n  }\n\n\n  return storeOptions;\n}\n\n\n\n\n/**\n * 把 store 配置数组中所有的配置对象合并成一个带有初始 statestore配置对象\n * @param storeConfigs : Array<StoreOptions>  store 的配置数组\n * @param initState : State    初始state\n * @returns StoreOptions    返回带有初始 state 的选项对象\n */\nfunction mergeStoreConfigsWhitInitState (storeConfigs, initState) {\n  if (!(storeConfigs instanceof Array)) {\n    throw new Error(`storeConfigs必须是数组类型，但您传的是：${storeConfigs}`);\n  }\n\n  let initStoreConfigs = storeConfigs.map((storeConf)=>{\n    return configStoreOptionsWhitInitState(storeConf, initState, true);\n  });\n\n  let storeOptions = mergeStoreConfigs(initStoreConfigs);\n\n  return storeOptions;\n}\n\n\n\n\n\n// 给 Vuex.Store 添加 mergeStoreConfigs 方法\nVuex.Store.mergeStoreConfigs = mergeStoreConfigs;\n\n// 给 Vuex.Store 添加 configStoreOptionsWhitInitState 方法\nVuex.Store.configStoreOptionsWhitInitState = configStoreOptionsWhitInitState;\n\n// 给 Vuex.Store 添加 mergeStoreConfigsWhitInitState 方法\nVuex.Store.mergeStoreConfigsWhitInitState = mergeStoreConfigsWhitInitState ;\n\n\n\n","module.exports = require(\"es-expand\");"],"sourceRoot":""}